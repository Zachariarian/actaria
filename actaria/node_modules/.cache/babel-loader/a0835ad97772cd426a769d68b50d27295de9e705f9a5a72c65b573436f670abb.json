{"ast":null,"code":"//import {changeStep} from \"../actions/ApplicationAction\";\n//import Store from \"../Store\";\n\nconst regExps = {\n  name: /^[A-Za-z]{3,20}$/,\n  companyName: /^[A-Za-z]+[A-Za-z0-9]$/,\n  email: /^[a-z]+[a-z._]{2,}@[a-z]+[a-z.]+.[a-z]{2,}$/,\n  website: /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/,\n  address: /^(.){10,}/,\n  mobile: /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/,\n  gender: /^(male|female|other)$/\n};\nconst defaultState = {\n  personal: {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    mobile: \"\",\n    address: \"\",\n    gender: \"\"\n  },\n  business: {\n    name: \"\",\n    website: \"\",\n    email: \"\",\n    phone: \"\",\n    address: \"\"\n  },\n  activeStep: 0,\n  confirmed: false,\n  errors: {\n    personal: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      mobile: \"\",\n      address: \"\",\n      gender: \"\"\n    },\n    business: {\n      name: \"\",\n      website: \"\",\n      email: \"\",\n      phone: \"\",\n      address: \"\"\n    },\n    confirmed: \"\"\n  }\n};\nconst ApplicationReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"APPLICATION_MODEL_CHANGED\":\n      state = {\n        ...state,\n        [action.payload.type]: {\n          ...state[action.payload.type],\n          [action.payload.model]: action.payload.value\n        }\n      };\n      break;\n    case \"APPLICATION_STEP_CHANGED\":\n      state = {\n        ...state,\n        activeStep: state.activeStep >= 2 && action.payload > 0 || state.activeStep <= 0 && action.payload < 0 ? state.activeStep : state.activeStep + action.payload\n      };\n      break;\n    case \"APPLICATION_CONFIRMATION_CHANGED\":\n      state = {\n        ...state,\n        confirmed: action.payload\n      };\n      break;\n    case \"APPLICATION_CHECK_ERRORS\":\n      let {\n        errors,\n        newState\n      } = getErrors(state);\n      if (errors) {\n        state = {\n          ...newState\n        };\n      } else {\n        state = {\n          ...state,\n          activeStep: state.activeStep >= 3 && action.payload > 0 || state.activeStep <= 0 && action.payload < 0 ? state.activeStep : state.activeStep + action.payload\n        };\n      }\n      break;\n    default:\n  }\n  return state;\n};\n_c = ApplicationReducer;\nfunction getErrors(state) {\n  let result = false;\n  let newState = {\n    ...state\n  };\n  let step = state.activeStep;\n  if (step === 0) {\n    if (!regExps.name.test(state.personal.firstName)) {\n      newState.errors.personal.firstName = \"First name should contain only letter & must be of min 3 chars\";\n      result = true;\n    } else {\n      console.log(regExps.name.test(state.personal.firstName));\n      newState.errors.personal.firstName = \"\";\n    }\n    if (!regExps.name.test(state.personal.lastName)) {\n      newState.errors.personal.lastName = \"Last name should contain only letter & must be of min 3 chars\";\n      result = true;\n    } else {\n      newState.errors.personal.lastName = \"\";\n    }\n    if (!regExps.mobile.test(state.personal.mobile)) {\n      newState.errors.personal.mobile = \"Invalid mobile number\";\n      result = true;\n    } else {\n      newState.errors.personal.mobile = \"\";\n    }\n    if (!regExps.email.test(state.personal.email)) {\n      newState.errors.personal.email = \"Invalid email\";\n      result = true;\n    } else {\n      newState.errors.personal.email = \"\";\n    }\n    if (!regExps.address.test(state.personal.address)) {\n      newState.errors.personal.address = \"Invalid address\";\n      result = true;\n    } else {\n      newState.errors.personal.address = \"\";\n    }\n    if (!regExps.gender.test(state.personal.gender)) {\n      newState.errors.personal.gender = \"Invalid gender\";\n      result = true;\n    } else {\n      newState.errors.personal.gender = \"\";\n    }\n  } else if (step === 1) {\n    if (!regExps.gender.test(state.personal.gender)) {\n      newState.errors.personal.gender = \"Invalid gender\";\n      result = true;\n    } else {\n      newState.errors.personal.gender = \"\";\n    }\n    if (!regExps.name.test(state.business.name)) {\n      newState.errors.business.name = \"Business name should contain only letter & must be of min 3 chars\";\n      result = true;\n    } else {\n      newState.errors.business.name = \"\";\n    }\n    if (!regExps.website.test(state.business.website)) {\n      newState.errors.business.website = \"Invalid website\";\n      result = true;\n    } else {\n      newState.errors.business.website = \"\";\n    }\n    if (!regExps.mobile.test(state.business.phone)) {\n      newState.errors.business.phone = \"Invalid mobile number\";\n      result = true;\n    } else {\n      newState.errors.business.phone = \"\";\n    }\n    if (!regExps.email.test(state.business.email)) {\n      newState.errors.business.email = \"Invalid email\";\n      result = true;\n    } else {\n      newState.errors.business.email = \"\";\n    }\n    if (regExps.address.test(state.business.address)) {\n      newState.errors.business.address = \"Invalid address\";\n      result = true;\n    } else {\n      newState.errors.business.address = \"\";\n    }\n  } else {\n    if (!state.confirmed) {\n      newState.errors.confirmed = \"Please accept the terms & Conditions.\";\n      result = true;\n    } else {\n      newState.errors.confirmed = \"\";\n    }\n  }\n  return {\n    errors: result,\n    newState: newState\n  };\n}\nexport default ApplicationReducer;\nvar _c;\n$RefreshReg$(_c, \"ApplicationReducer\");","map":{"version":3,"names":["regExps","name","companyName","email","website","address","mobile","gender","defaultState","personal","firstName","lastName","business","phone","activeStep","confirmed","errors","ApplicationReducer","state","arguments","length","undefined","action","type","payload","model","value","newState","getErrors","_c","result","step","test","console","log","$RefreshReg$"],"sources":["C:/Users/USER/alx-low level/equidraft/actaria/src/components/reducers/ApplicationReducer.jsx"],"sourcesContent":["//import {changeStep} from \"../actions/ApplicationAction\";\r\n//import Store from \"../Store\";\r\n\r\nconst regExps = {\r\n    name: /^[A-Za-z]{3,20}$/,\r\n    companyName: /^[A-Za-z]+[A-Za-z0-9]$/,\r\n    email: /^[a-z]+[a-z._]{2,}@[a-z]+[a-z.]+.[a-z]{2,}$/,\r\n    website: /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/,\r\n    address: /^(.){10,}/,\r\n    mobile: /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/,\r\n    gender: /^(male|female|other)$/\r\n};\r\n\r\nconst defaultState = {\r\n    personal: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        mobile: \"\",\r\n        address: \"\",\r\n        gender: \"\"\r\n    },\r\n    business: {\r\n        name: \"\",\r\n        website: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        address: \"\"\r\n    },\r\n    activeStep: 0,\r\n    confirmed: false,\r\n    errors: {\r\n        personal: {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            mobile: \"\",\r\n            address: \"\",\r\n            gender: \"\"\r\n        },\r\n        business: {\r\n            name: \"\",\r\n            website: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            address: \"\"\r\n        },\r\n        confirmed: \"\"\r\n    }\r\n};\r\n\r\n\r\nconst ApplicationReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case \"APPLICATION_MODEL_CHANGED\":\r\n            state = {\r\n                ...state,\r\n                [action.payload.type]: {\r\n                    ...state[action.payload.type],\r\n                    [action.payload.model]: action.payload.value\r\n                }\r\n            };\r\n            break;\r\n        case \"APPLICATION_STEP_CHANGED\":\r\n            state = {\r\n                ...state,\r\n                activeStep: ((state.activeStep >= 2 && action.payload > 0) || (state.activeStep <= 0 && action.payload < 0)) ? state.activeStep : state.activeStep+action.payload\r\n            };\r\n            break;\r\n        case \"APPLICATION_CONFIRMATION_CHANGED\":\r\n            state = {\r\n                ...state,\r\n                confirmed: action.payload\r\n            };\r\n            break;\r\n\r\n        case \"APPLICATION_CHECK_ERRORS\":\r\n            let { errors, newState } = getErrors(state);\r\n            if(errors){\r\n                state = {\r\n                    ...newState,\r\n                }\r\n            }\r\n            else{\r\n                state = {\r\n                    ...state,\r\n                    activeStep: ((state.activeStep >= 3 && action.payload > 0) || (state.activeStep <= 0 && action.payload < 0)) ? state.activeStep : state.activeStep+action.payload\r\n                };\r\n            }\r\n\r\n            break;\r\n        default:\r\n    }\r\n    return state;\r\n};\r\n\r\nfunction getErrors(state) {\r\n    let result = false;\r\n    let newState = {\r\n        ...state\r\n    };\r\n    let step = state.activeStep;\r\n    if(step === 0){\r\n        if(!regExps.name.test(state.personal.firstName)){\r\n            newState.errors.personal.firstName = \"First name should contain only letter & must be of min 3 chars\";\r\n            result = true;\r\n        }\r\n        else{\r\n            console.log(regExps.name.test(state.personal.firstName))\r\n            newState.errors.personal.firstName = \"\";\r\n        }\r\n        if(!regExps.name.test(state.personal.lastName)){\r\n            newState.errors.personal.lastName = \"Last name should contain only letter & must be of min 3 chars\";\r\n            result = true;\r\n        }\r\n        else{\r\n            newState.errors.personal.lastName = \"\";\r\n        }\r\n        if(!regExps.mobile.test(state.personal.mobile)){\r\n            newState.errors.personal.mobile = \"Invalid mobile number\";\r\n            result = true;\r\n        }\r\n        else{\r\n            newState.errors.personal.mobile = \"\";\r\n        }\r\n        if(!regExps.email.test(state.personal.email)){\r\n            newState.errors.personal.email = \"Invalid email\";\r\n            result = true;\r\n        }\r\n        else{\r\n            newState.errors.personal.email = \"\";\r\n        }\r\n        if(!regExps.address.test(state.personal.address)){\r\n            newState.errors.personal.address = \"Invalid address\";\r\n            result = true;\r\n        }\r\n        else{\r\n            newState.errors.personal.address = \"\";\r\n        }\r\n        if(!regExps.gender.test(state.personal.gender)){\r\n            newState.errors.personal.gender = \"Invalid gender\";\r\n            result = true;\r\n        }\r\n        else{\r\n            newState.errors.personal.gender = \"\";\r\n        }\r\n    }\r\n    else if(step === 1){\r\n        if(!regExps.gender.test(state.personal.gender)){\r\n            newState.errors.personal.gender = \"Invalid gender\";\r\n            result = true;\r\n        }\r\n        else{\r\n            newState.errors.personal.gender = \"\";\r\n        }\r\n\r\n        if(!regExps.name.test(state.business.name)){\r\n            newState.errors.business.name = \"Business name should contain only letter & must be of min 3 chars\";\r\n            result = true;\r\n        }\r\n        else{\r\n            newState.errors.business.name = \"\";\r\n        }\r\n        if(!regExps.website.test(state.business.website)){\r\n            newState.errors.business.website = \"Invalid website\";\r\n            result = true;\r\n        }\r\n        else{\r\n            newState.errors.business.website = \"\";\r\n        }\r\n        if(!regExps.mobile.test(state.business.phone)){\r\n            newState.errors.business.phone = \"Invalid mobile number\";\r\n            result = true;\r\n        }\r\n        else{\r\n            newState.errors.business.phone = \"\";\r\n        }\r\n        if(!regExps.email.test(state.business.email)){\r\n            newState.errors.business.email = \"Invalid email\";\r\n            result = true;\r\n        }\r\n        else{\r\n            newState.errors.business.email = \"\";\r\n        }\r\n        if(regExps.address.test(state.business.address)){\r\n            newState.errors.business.address = \"Invalid address\";\r\n            result = true;\r\n        }\r\n        else{\r\n            newState.errors.business.address = \"\";\r\n        }\r\n    }\r\n    else{\r\n        if(!state.confirmed){\r\n            newState.errors.confirmed = \"Please accept the terms & Conditions.\";\r\n            result = true;\r\n        }\r\n        else{\r\n            newState.errors.confirmed = \"\";\r\n        }\r\n    }\r\n\r\n    return {\r\n        errors: result,\r\n        newState: newState\r\n    };\r\n}\r\n\r\nexport default ApplicationReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}