{"ast":null,"code":"import { getInterest } from \"../actions/PredictorAction\";\nimport Store from \"../Store\";\nconst defaultState = {\n  data: {\n    loanTypes: [{\n      title: \"Personal\"\n    }, {\n      title: \"Small Enterprise\"\n    }, {\n      title: \"Medium Enterprise\"\n    }]\n  },\n  values: {\n    loanType: {\n      title: \"Personal\"\n    },\n    loanAmount: 1000,\n    termLength: 1,\n    interestRate: null,\n    monthlyPayment: null\n  }\n};\nconst PredictorReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"PREDICTOR_LOAN_TYPE_CHANGED\":\n      state = {\n        ...state,\n        values: {\n          ...state.values,\n          loanType: action.payload\n        }\n      };\n      break;\n    case \"PREDICTOR_MODEL_CHANGED\":\n      state = {\n        ...state,\n        values: {\n          ...state.values,\n          [action.payload.model]: action.payload.value,\n          interestRate: null,\n          monthlyPayment: null\n        }\n      };\n      Store.dispatch(getInterest({\n        loanAmount: state.values.loanAmount,\n        termLength: state.values.termLength\n      }));\n      break;\n    case \"PREDICTOR_INTEREST_FETCHED\":\n      state = {\n        ...state,\n        values: {\n          ...state.values,\n          interestRate: action.payload.interestRate,\n          loanAmount: action.payload.loanAmount,\n          termLength: action.payload.termLength,\n          monthlyPayment: action.payload.monthlyPayment\n        }\n      };\n      break;\n    default:\n  }\n  return state;\n};\n_c = PredictorReducer;\nexport default PredictorReducer;\nvar _c;\n$RefreshReg$(_c, \"PredictorReducer\");","map":{"version":3,"names":["getInterest","Store","defaultState","data","loanTypes","title","values","loanType","loanAmount","termLength","interestRate","monthlyPayment","PredictorReducer","state","arguments","length","undefined","action","type","payload","model","value","dispatch","_c","$RefreshReg$"],"sources":["C:/Users/USER/alx-low level/equidraft/actaria/src/components/reducers/PredictorReducer.jsx"],"sourcesContent":["import {getInterest} from \"../actions/PredictorAction\";\r\nimport Store from \"../Store\";\r\n\r\nconst defaultState = {\r\n    data: {\r\n        loanTypes: [\r\n            {\r\n                title: \"Personal\"\r\n            },\r\n            {\r\n                title: \"Small Enterprise\"\r\n            },\r\n            {\r\n                title: \"Medium Enterprise\"\r\n            }\r\n        ],\r\n    },\r\n    values: {\r\n        loanType: {\r\n            title: \"Personal\",\r\n            \r\n        },\r\n        loanAmount: 1000,\r\n        termLength: 1,\r\n        interestRate: null,\r\n        monthlyPayment: null\r\n    }\r\n};\r\n\r\n\r\nconst PredictorReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case \"PREDICTOR_LOAN_TYPE_CHANGED\":\r\n            state = {\r\n                ...state,\r\n                values: {\r\n                    ...state.values,\r\n                    loanType: action.payload\r\n                }\r\n            };\r\n            break;\r\n        case \"PREDICTOR_MODEL_CHANGED\":\r\n            state = {\r\n                ...state,\r\n                values: {\r\n                    ...state.values,\r\n                    [action.payload.model]: action.payload.value,\r\n                    interestRate: null,\r\n                    monthlyPayment: null\r\n                }\r\n            };\r\n            Store.dispatch(getInterest({\r\n                loanAmount: state.values.loanAmount,\r\n                termLength: state.values.termLength,\r\n            }));\r\n            break;\r\n\r\n        case \"PREDICTOR_INTEREST_FETCHED\":\r\n            state = {\r\n                ...state,\r\n                values: {\r\n                    ...state.values,\r\n                    interestRate: action.payload.interestRate,\r\n                    loanAmount: action.payload.loanAmount,\r\n                    termLength: action.payload.termLength,\r\n                    monthlyPayment: action.payload.monthlyPayment,\r\n                }\r\n            };\r\n\r\n            break;\r\n        default:\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default PredictorReducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,4BAA4B;AACtD,OAAOC,KAAK,MAAM,UAAU;AAE5B,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE;IACFC,SAAS,EAAE,CACP;MACIC,KAAK,EAAE;IACX,CAAC,EACD;MACIA,KAAK,EAAE;IACX,CAAC,EACD;MACIA,KAAK,EAAE;IACX,CAAC;EAET,CAAC;EACDC,MAAM,EAAE;IACJC,QAAQ,EAAE;MACNF,KAAK,EAAE;IAEX,CAAC;IACDG,UAAU,EAAE,IAAI;IAChBC,UAAU,EAAE,CAAC;IACbC,YAAY,EAAE,IAAI;IAClBC,cAAc,EAAE;EACpB;AACJ,CAAC;AAGD,MAAMC,gBAAgB,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGZ,YAAY;EAAA,IAAEe,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAClD,QAAQC,MAAM,CAACC,IAAI;IACf,KAAK,6BAA6B;MAC9BL,KAAK,GAAG;QACJ,GAAGA,KAAK;QACRP,MAAM,EAAE;UACJ,GAAGO,KAAK,CAACP,MAAM;UACfC,QAAQ,EAAEU,MAAM,CAACE;QACrB;MACJ,CAAC;MACD;IACJ,KAAK,yBAAyB;MAC1BN,KAAK,GAAG;QACJ,GAAGA,KAAK;QACRP,MAAM,EAAE;UACJ,GAAGO,KAAK,CAACP,MAAM;UACf,CAACW,MAAM,CAACE,OAAO,CAACC,KAAK,GAAGH,MAAM,CAACE,OAAO,CAACE,KAAK;UAC5CX,YAAY,EAAE,IAAI;UAClBC,cAAc,EAAE;QACpB;MACJ,CAAC;MACDV,KAAK,CAACqB,QAAQ,CAACtB,WAAW,CAAC;QACvBQ,UAAU,EAAEK,KAAK,CAACP,MAAM,CAACE,UAAU;QACnCC,UAAU,EAAEI,KAAK,CAACP,MAAM,CAACG;MAC7B,CAAC,CAAC,CAAC;MACH;IAEJ,KAAK,4BAA4B;MAC7BI,KAAK,GAAG;QACJ,GAAGA,KAAK;QACRP,MAAM,EAAE;UACJ,GAAGO,KAAK,CAACP,MAAM;UACfI,YAAY,EAAEO,MAAM,CAACE,OAAO,CAACT,YAAY;UACzCF,UAAU,EAAES,MAAM,CAACE,OAAO,CAACX,UAAU;UACrCC,UAAU,EAAEQ,MAAM,CAACE,OAAO,CAACV,UAAU;UACrCE,cAAc,EAAEM,MAAM,CAACE,OAAO,CAACR;QACnC;MACJ,CAAC;MAED;IACJ;EAAQ;EAEZ,OAAOE,KAAK;AAChB,CAAC;AAACU,EAAA,GA3CIX,gBAAgB;AA6CtB,eAAeA,gBAAgB;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}